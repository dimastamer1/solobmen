<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Solana Exchange</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
  <style>
    :root {
      --primary: #9945FF;
      --secondary: #14F195;
      --error: #FF4961;
      --dark: #0F0F0F;
      --darker: #080808;
      --light: #FFFFFF;
      --gray: #2D2D2D;
      --solana-gradient: linear-gradient(135deg, #9945FF 0%, #14F195 100%);
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Inter', sans-serif;
    }
    
    body {
      background-color: var(--dark);
      color: var(--light);
      min-height: 100vh;
      overflow-x: hidden;
    }
    
    .app-container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 0 20px;
    }
    
    /* Header */
    .app-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px 0;
      border-bottom: 1px solid rgba(255,255,255,0.1);
      margin-bottom: 30px;
    }
    
    .logo-container {
      display: flex;
      align-items: center;
      gap: 15px;
    }
    
    .logo {
      width: 40px;
      height: 40px;
      object-fit: contain;
    }
    
    h1 {
      font-size: 24px;
      font-weight: 700;
      background: var(--solana-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    
    /* Balance Header */
    .balance-header {
      display: flex;
      gap: 30px;
      background: rgba(255,255,255,0.03);
      padding: 15px 25px;
      border-radius: 16px;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255,255,255,0.05);
    }
    
    .balance-item {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .crypto-icon-small {
      width: 24px;
      height: 24px;
      object-fit: contain;
    }
    
    /* Main Content */
    .app-content {
      padding: 20px 0 50px;
    }
    
    .exchange-container {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 25px;
    }
    
    /* Exchange Cards */
    .exchange-card {
      background: rgba(255,255,255,0.03);
      border-radius: 20px;
      padding: 25px;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255,255,255,0.05);
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }
    
    .exchange-card::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(153,69,255,0.1) 0%, rgba(0,0,0,0) 70%);
      z-index: -1;
    }
    
    .exchange-card:nth-child(2)::before {
      background: radial-gradient(circle, rgba(20,241,149,0.1) 0%, rgba(0,0,0,0) 70%);
    }
    
    .exchange-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 30px rgba(0,0,0,0.2);
    }
    
    .rate-display {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      padding-bottom: 20px;
      border-bottom: 1px solid rgba(255,255,255,0.05);
    }
    
    .crypto-info {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .crypto-icon {
      width: 32px;
      height: 32px;
      object-fit: contain;
    }
    
    .rate-value {
      font-size: 20px;
      font-weight: 600;
    }
    
    /* Buttons */
    .action-buttons {
      display: flex;
      gap: 12px;
      margin: 20px 0;
    }
    
    .btn-action {
      flex: 1;
      padding: 12px;
      border-radius: 12px;
      border: none;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 14px;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
    }
    
    .btn-action:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    }
    
    .btn-buy {
      background: var(--secondary);
      color: var(--darker);
    }
    
    .btn-sell {
      background: var(--error);
      color: white;
    }
    
    .btn-deposit {
      background: var(--primary);
      color: white;
      width: 100%;
      padding: 14px;
      border-radius: 12px;
      border: none;
      font-weight: 600;
      cursor: pointer;
      margin-top: 10px;
      transition: all 0.3s ease;
    }
    
    .btn-deposit:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(153, 69, 255, 0.3);
    }
    
    .btn-withdraw {
      background: rgba(255,255,255,0.1);
      color: white;
      width: 100%;
      padding: 14px;
      border-radius: 12px;
      border: 1px solid rgba(255,255,255,0.1);
      font-weight: 600;
      cursor: pointer;
      margin-top: 10px;
      transition: all 0.3s ease;
    }
    
    .btn-withdraw:hover {
      background: rgba(255,255,255,0.2);
      transform: translateY(-2px);
    }
    
    /* Modals */
    .modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.7);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      opacity: 0;
      pointer-events: none;
      transition: all 0.3s ease;
      backdrop-filter: blur(5px);
    }
    
    .modal.active {
      opacity: 1;
      pointer-events: all;
    }
    
    .modal-content {
      background: var(--darker);
      border-radius: 20px;
      padding: 30px;
      width: 100%;
      max-width: 450px;
      position: relative;
      border: 1px solid rgba(255,255,255,0.1);
      box-shadow: 0 10px 30px rgba(0,0,0,0.3);
      transform: translateY(20px);
      transition: all 0.3s ease;
    }
    
    .modal.active .modal-content {
      transform: translateY(0);
    }
    
    .close-modal {
      position: absolute;
      top: 20px;
      right: 20px;
      font-size: 24px;
      cursor: pointer;
      color: rgba(255,255,255,0.5);
      transition: all 0.2s ease;
    }
    
    .close-modal:hover {
      color: white;
    }
    
    .modal h2 {
      font-size: 22px;
      margin-bottom: 20px;
      background: var(--solana-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    
    .input-field {
      width: 100%;
      padding: 14px 16px;
      margin-bottom: 15px;
      border-radius: 12px;
      border: 1px solid var(--gray);
      background: rgba(255,255,255,0.03);
      color: white;
      font-size: 16px;
      transition: all 0.3s ease;
    }
    
    .input-field:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 2px rgba(153,69,255,0.2);
    }
    
    .address-box {
      background: rgba(255,255,255,0.05);
      padding: 15px;
      border-radius: 12px;
      margin: 15px 0;
      font-family: monospace;
      word-break: break-all;
      border: 1px dashed rgba(255,255,255,0.1);
      text-align: center;
      font-size: 14px;
    }
    
    /* Animations */
    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-10px); }
    }
    
    .floating {
      animation: float 6s ease-in-out infinite;
    }
    
    /* Responsive */
    @media (max-width: 768px) {
      .exchange-container {
        grid-template-columns: 1fr;
      }
      
      .balance-header {
        gap: 15px;
        padding: 12px 15px;
      }
      
      .app-header {
        flex-direction: column;
        gap: 15px;
        align-items: flex-start;
      }
    }
    
    /* Toast */
    .toast {
      position: fixed;
      bottom: 20px;
      right: 20px;
      background: var(--darker);
      color: white;
      padding: 15px 20px;
      border-radius: 12px;
      box-shadow: 0 5px 15px rgba(0,0,0,0.3);
      border-left: 4px solid var(--primary);
      transform: translateY(100px);
      opacity: 0;
      transition: all 0.3s ease;
      z-index: 1001;
      max-width: 300px;
    }
    
    .toast.show {
      transform: translateY(0);
      opacity: 1;
    }
    
    .toast.error {
      border-left-color: var(--error);
    }
    
    /* Network Select */
    .network-select {
      display: flex;
      align-items: center;
      gap: 10px;
      margin: 15px 0;
      padding: 12px 15px;
      background: rgba(255,255,255,0.03);
      border-radius: 12px;
    }
    
    /* Glow Effects */
    .glow {
      position: absolute;
      width: 100px;
      height: 100px;
      border-radius: 50%;
      filter: blur(60px);
      opacity: 0.3;
      z-index: -1;
    }
    
    .glow-purple {
      background: var(--primary);
      top: -50px;
      right: -50px;
    }
    
    .glow-green {
      background: var(--secondary);
      bottom: -50px;
      left: -50px;
    }
  </style>
</head>
<body>
  <div class="app-container">
    <!-- Glow Effects -->
    <div class="glow glow-purple"></div>
    <div class="glow glow-green"></div>
    
    <header class="app-header">
      <div class="logo-container">
        <img src="https://static.vecteezy.com/system/resources/previews/011/307/364/non_2x/solana-sol-badge-crypto-3d-rendering-free-png.png" alt="Solana" class="logo floating">
        <h1>Solana Exchange</h1>
      </div>
      <div class="balance-header animate__animated animate__fadeIn">
        <div class="balance-item">
          <img src="https://static.vecteezy.com/system/resources/previews/011/307/364/non_2x/solana-sol-badge-crypto-3d-rendering-free-png.png" alt="SOL" class="crypto-icon-small">
          <span id="solBalance">0.0000</span> SOL
        </div>
        <div class="balance-item">
          <img src="https://img.icons8.com/color/512/tether.png" alt="USDT" class="crypto-icon-small">
          <span id="usdtBalance">0.00</span> USDT
        </div>
      </div>
    </header>

    <main class="app-content">
      <div class="exchange-container">
        <!-- SOL Card -->
        <div class="exchange-card animate__animated animate__fadeInUp">
          <div class="rate-display">
            <div class="crypto-info">
              <img src="https://static.vecteezy.com/system/resources/previews/011/307/364/non_2x/solana-sol-badge-crypto-3d-rendering-free-png.png" alt="SOL" class="crypto-icon">
              <span style="font-weight: 600;">Solana</span>
            </div>
            <div class="rate-value" id="rate">0.00 USDT</div>
          </div>

          <div class="action-buttons">
            <button class="btn-action btn-buy" id="buySolBtn">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M12 4V20M12 4L6 10M12 4L18 10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              Buy SOL
            </button>
            <button class="btn-action btn-sell" id="sellSolBtn">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M12 4V20M12 20L18 14M12 20L6 14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              Sell SOL
            </button>
          </div>

          
          <button class="btn-deposit" id="depositSolBtn">
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="margin-right: 8px;">
              <path d="M12 15V3M12 15L8 11M12 15L16 11M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            Deposit SOL
          </button>
          <button class="btn-withdraw" id="withdrawSolBtn">
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="margin-right: 8px;">
              <path d="M12 9V15M12 15L9 12M12 15L15 12M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            Withdraw SOL
          </button>
        </div>

        <!-- USDT Card -->
        <div class="exchange-card animate__animated animate__fadeInUp" style="animation-delay: 0.1s;">
          <div class="rate-display">
            <div class="crypto-info">
              <img src="https://img.icons8.com/color/512/tether.png" alt="USDT" class="crypto-icon">
              <span style="font-weight: 600;">Tether</span>
            </div>
            <div class="rate-value"> trading now - <span id="usdtRate"></span> </div>
          </div>

          <div class="action-buttons">
            <button class="btn-action btn-buy" id="buyUsdtBtn">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M12 4V20M12 4L6 10M12 4L18 10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              Buy USDT
            </button>
            <button class="btn-action btn-sell" id="sellUsdtBtn">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M12 4V20M12 20L18 14M12 20L6 14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              Sell USDT
            </button>
          </div>
          
          <button class="btn-deposit" id="depositUsdtBtn">
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="margin-right: 8px;">
              <path d="M12 15V3M12 15L8 11M12 15L16 11M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            Deposit USDT
          </button>
          <button class="btn-withdraw" id="withdrawUsdtBtn">
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="margin-right: 8px;">
              <path d="M12 9V15M12 15L9 12M12 15L15 12M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            Withdraw USDT
          </button>
        </div>
      </div>
    </main>

    <!-- Modals -->
    <!-- Deposit SOL Modal -->
    <div class="modal" id="depositSolModal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Deposit SOL</h2>
        <p>Send SOL to this address</p>
        <p>Do not send less than the minimum amount, otherwise solana will be lost, the deposit takes 1-5 minutes</p>
        <div class="address-box">SOL-ADDRESS-HERE</div>
        <p style="color: rgba(255,255,255,0.7); font-size: 14px; margin-top: 10px;">Minimum deposit: 0.05 SOL</p>
      </div>
    </div>

    <!-- Deposit USDT Modal -->
    <div class="modal" id="depositUsdtModal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Deposit USDT</h2>
        <p>Send USDT (TRC20) to this address:</p>
        <p>Do not send less than the minimum amount, otherwise solana will be lost, the deposit takes 1-5 minutes</p>
        <div class="address-box">USDT-ADDRESS-HERE</div>
        <p style="color: rgba(255,255,255,0.7); font-size: 14px; margin-top: 10px;">Minimum deposit: 5 USDT</p>
      </div>
    </div>

    <!-- Withdraw SOL Modal -->
    <div class="modal" id="withdrawSolModal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Withdraw SOL</h2>
        <input type="text" placeholder="SOL Address" class="input-field">
        <input type="number" placeholder="Amount SOL" class="input-field">
        <div class="network-select">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z" stroke="#9945FF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M8 14C8 14 9.5 16 12 16C14.5 16 16 14 16 14M12 8V14" stroke="#9945FF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          <label>Network: Solana (SOL)</label>
        </div>
        <button class="btn-withdraw" style="width: 100%;">Withdraw SOL</button>
      </div>
    </div>

    <!-- Withdraw USDT Modal -->
    <div class="modal" id="withdrawUsdtModal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Withdraw USDT</h2>
        <input type="text" placeholder="USDT Address" class="input-field">
        <input type="number" placeholder="Amount USDT" class="input-field">
        <div class="network-select">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z" stroke="#14F195" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M8 14C8 14 9.5 16 12 16C14.5 16 16 14 16 14M12 8V14" stroke="#14F195" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          <label>Network: Tron (TRC20)</label>
        </div>
        <button class="btn-withdraw" style="width: 100%;">Withdraw USDT</button>
      </div>
    </div>

    <!-- Buy/Sell Modals -->
    <div class="modal" id="buySolModal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Buy SOL</h2>
        <p>Enter amount of USDT to exchange for SOL</p>
        <input type="number" placeholder="Amount USDT" class="input-field">
        <button class="btn-buy" style="width: 100%;">Buy SOL</button>
      </div>
    </div>

    <div class="modal" id="sellSolModal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Sell SOL</h2>
        <p>Enter amount of SOL to exchange for USDT</p>
        <input type="number" placeholder="Amount SOL" class="input-field">
        <button class="btn-sell" style="width: 100%;">Sell SOL</button>
      </div>
    </div>

    <div class="modal" id="buyUsdtModal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Buy USDT</h2>
        <p>Enter amount of SOL to exchange for USDT</p>
        <input type="number" placeholder="Amount SOL" class="input-field">
        <button class="btn-buy" style="width: 100%;">Buy USDT</button>
      </div>
    </div>

    <div class="modal" id="sellUsdtModal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Sell USDT</h2>
        <p>Enter amount of USDT to exchange for SOL</p>
        <input type="number" placeholder="Amount USDT" class="input-field">
        <button class="btn-sell" style="width: 100%;">Sell USDT</button>
      </div>
    </div>

    <!-- Captcha Modal -->
    <div class="modal" id="captchaModal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Verify you're human</h2>
        <form id="captchaForm">
          <div id="captchaQuestion" style="font-size: 18px; margin: 15px 0; text-align: center;">What is 6 + 6?</div>
          <input type="text" id="captchaAnswer" placeholder="Your answer" class="input-field" required>
          <button type="submit" class="btn-deposit" style="width: 100%;">Verify</button>
        </form>
      </div>
    </div>
  </div>

  <!-- Toast Notification -->
  <div class="toast" id="toast"></div>

  <script>
    // Конфигурация
    const API_BASE_URL = 'https://solobmen.onrender.com';
    
    // Состояние приложения
    let rate = getRandomRate();
    let usdtRate = (1 / rate).toFixed(6);
    let balances = {
      sol: 0,
      usdt: 0
    };
    
    // DOM элементы
    const elements = {
      // Балансы
      solBalance: document.getElementById('solBalance'),
      usdtBalance: document.getElementById('usdtBalance'),
      rateDisplay: document.getElementById('rate'),
      usdtRateDisplay: document.getElementById('usdtRate'),
      
      // Кнопки операций
      depositSolBtn: document.getElementById('depositSolBtn'),
      depositUsdtBtn: document.getElementById('depositUsdtBtn'),
      withdrawSolBtn: document.getElementById('withdrawSolBtn'),
      withdrawUsdtBtn: document.getElementById('withdrawUsdtBtn'),
      buySolBtn: document.getElementById('buySolBtn'),
      sellSolBtn: document.getElementById('sellSolBtn'),
      buyUsdtBtn: document.getElementById('buyUsdtBtn'),
      sellUsdtBtn: document.getElementById('sellUsdtBtn'),
      
      // Модалки
      modals: {
        depositSol: document.getElementById('depositSolModal'),
        depositUsdt: document.getElementById('depositUsdtModal'),
        withdrawSol: document.getElementById('withdrawSolModal'),
        withdrawUsdt: document.getElementById('withdrawUsdtModal'),
        buySol: document.getElementById('buySolModal'),
        sellSol: document.getElementById('sellSolModal'),
        buyUsdt: document.getElementById('buyUsdtModal'),
        sellUsdt: document.getElementById('sellUsdtModal'),
        captcha: document.getElementById('captchaModal')
      },
      
      // Форма капчи
      captchaForm: document.getElementById('captchaForm'),
      captchaAnswer: document.getElementById('captchaAnswer'),
      
      // Toast
      toast: document.getElementById('toast')
    };
    
    // Инициализация приложения
    document.addEventListener('DOMContentLoaded', () => {
      initApp();
      startRateUpdates();
    });
    
    function getRandomRate() {
      return (Math.random() * (178.02 - 160.03) + 160.03).toFixed(2);
    }
    
    function initApp() {
      setupEventListeners();
      updateUI();
      
      // Проверяем localStorage для балансов
      const savedBalances = JSON.parse(localStorage.getItem('balances'));
      if (savedBalances) {
        balances = savedBalances;
        updateBalances();
      }
      
      // Показываем капчу если не пройдена
      if (!localStorage.getItem('captchaPassed')) {
        showModal('captcha');
      }
    }
    
    function setupEventListeners() {
      // Кнопки депозита
      elements.depositSolBtn.addEventListener('click', () => showModal('depositSol'));
      elements.depositUsdtBtn.addEventListener('click', () => showModal('depositUsdt'));
      
      // Кнопки вывода
      elements.withdrawSolBtn.addEventListener('click', () => handleWithdraw('sol'));
      elements.withdrawUsdtBtn.addEventListener('click', () => handleWithdraw('usdt'));
      
      // Кнопки торговли
      elements.buySolBtn.addEventListener('click', () => handleTrade('buy', 'sol'));
      elements.sellSolBtn.addEventListener('click', () => handleTrade('sell', 'sol'));
      elements.buyUsdtBtn.addEventListener('click', () => handleTrade('buy', 'usdt'));
      elements.sellUsdtBtn.addEventListener('click', () => handleTrade('sell', 'usdt'));
      
      // Капча
      elements.captchaForm.addEventListener('submit', handleCaptchaSubmit);
      
      // Закрытие модальных окон
      document.querySelectorAll('.close-modal').forEach(btn => {
        btn.addEventListener('click', () => {
          Object.values(elements.modals).forEach(modal => {
            modal.classList.remove('active');
          });
        });
      });
      
      // Клик вне модального окна
      window.addEventListener('click', (e) => {
        if (e.target.classList.contains('modal')) {
          Object.values(elements.modals).forEach(modal => {
            modal.classList.remove('active');
          });
        }
      });
    }
    
    function updateUI() {
      updateBalances();
      
      if (elements.rateDisplay) {
        elements.rateDisplay.textContent = `${rate} USDT`;
      }
      
      if (elements.usdtRateDisplay) {
        elements.usdtRateDisplay.textContent = usdtRate;
      }
    }
    
    function updateBalances() {
      if (elements.solBalance) {
        elements.solBalance.textContent = balances.sol.toFixed(4);
      }
      if (elements.usdtBalance) {
        elements.usdtBalance.textContent = balances.usdt.toFixed(2);
      }
      localStorage.setItem('balances', JSON.stringify(balances));
    }
    
    // Обработчики действий
    function handleWithdraw(currency) {
      if (balances[currency] <= 0) {
        showToast(`You don't have enough ${currency.toUpperCase()} to withdraw`, 'error');
        return;
      }
      showModal(`withdraw${currency.charAt(0).toUpperCase() + currency.slice(1)}`);
    }
    
    function handleTrade(action, currency) {
      const baseCurrency = currency === 'sol' ? 'USDT' : 'SOL';
      const targetCurrency = currency === 'sol' ? 'SOL' : 'USDT';
      
      if (action === 'buy' && balances[currency === 'sol' ? 'usdt' : 'sol'] <= 0) {
        showToast(`You need to deposit ${baseCurrency} to buy ${targetCurrency}`, 'error');
        return;
      }
      
      if (action === 'sell' && balances[currency] <= 0) {
        showToast(`You don't have enough ${targetCurrency} to sell`, 'error');
        return;
      }
      
      showModal(`${action}${currency.charAt(0).toUpperCase() + currency.slice(1)}`);
    }
    
    async function handleCaptchaSubmit(e) {
      e.preventDefault();
      const answer = elements.captchaAnswer.value.trim();
      
      if (answer === "12") {
        localStorage.setItem('captchaPassed', 'true');
        showToast('Verification successful!');
        hideModal('captcha');
        
        // Даем бонус за прохождение капчи
        balances.sol += 0;
        balances.usdt += 0;
        updateBalances();
        showToast('You have successfully passed the captcha!');
      } else {
        showToast('Wrong answer, try again', 'error');
      }
    }
    
    // Вспомогательные функции
    function showModal(modalId) {
      elements.modals[modalId]?.classList.add('active');
    }
    
    function hideModal(modalId) {
      elements.modals[modalId]?.classList.remove('active');
    }
    
    function showToast(message, type = 'success') {
      const toast = elements.toast;
      toast.textContent = message;
      toast.className = 'toast';
      toast.classList.add(type === 'error' ? 'error' : 'success', 'show');
      
      setTimeout(() => {
        toast.classList.remove('show');
      }, 3000);
    }
    
    // Обновление курса
    function startRateUpdates() {
      updateRate();
      setInterval(updateRate, 5000);
    }


    
    function updateRate() {
      rate = getRandomRate();
      usdtRate = (1 / rate).toFixed(6);
      updateUI();
    }
  </script>
</body>
</html>